{"0": {
    "doc": "AI 메뉴얼입니다.",
    "title": "AI 메뉴얼입니다.",
    "content": " ",
    "url": "/pages/ai.html",
    
    "relUrl": "/pages/ai.html"
  },"1": {
    "doc": "백엔드 메뉴얼입니다.",
    "title": "백엔드 메뉴얼",
    "content": " ",
    "url": "/pages/backend.html#%EB%B0%B1%EC%97%94%EB%93%9C-%EB%A9%94%EB%89%B4%EC%96%BC",
    
    "relUrl": "/pages/backend.html#백엔드-메뉴얼"
  },"2": {
    "doc": "백엔드 메뉴얼입니다.",
    "title": "목차",
    "content": ". | 소개 | 시스템 아키텍처 | 기술 스택 | 프로젝트 구조 | API 엔드포인트 | 개발 환경 설정 | 배포 방법 | FAQ | . ",
    "url": "/pages/backend.html#%EB%AA%A9%EC%B0%A8",
    
    "relUrl": "/pages/backend.html#목차"
  },"3": {
    "doc": "백엔드 메뉴얼입니다.",
    "title": "소개",
    "content": "본 백엔드 시스템은 VoicePack 플랫폼을 위한 서버 애플리케이션입니다. 사용자가 보이스팩을 생성, 판매, 구매할 수 있는 API를 제공하며, AI 음성 합성 및 영상 기반 보이스팩 생성 등의 기능을 제공합니다. ",
    "url": "/pages/backend.html#%EC%86%8C%EA%B0%9C",
    
    "relUrl": "/pages/backend.html#소개"
  },"4": {
    "doc": "백엔드 메뉴얼입니다.",
    "title": "시스템 아키텍처",
    "content": "이 시스템은 Spring Boot 기반의 백엔드 서버로 구현되어 있으며 다음과 같은 구성요소로 이루어져 있습니다: . | Spring Boot 애플리케이션 - 핵심 비즈니스 로직 처리 | MySQL 데이터베이스 - 사용자, 보이스팩, 거래 정보 등 데이터 저장 | AWS S3 - 음성 파일, 이미지 등 미디어 저장 | AWS SQS/RabbitMQ - 비동기 작업 처리를 위한 메시지 큐 | AI 모델 서비스 연동 - 보이스팩 생성 및 합성을 위한 외부 AI 서비스 연동 | . ",
    "url": "/pages/backend.html#%EC%8B%9C%EC%8A%A4%ED%85%9C-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98",
    
    "relUrl": "/pages/backend.html#시스템-아키텍처"
  },"5": {
    "doc": "백엔드 메뉴얼입니다.",
    "title": "기술 스택",
    "content": "주요 기술 . | 언어: Kotlin 1.9.22 | 프레임워크: Spring Boot 3.2.3 | 빌드 도구: Gradle (with Kotlin DSL) | 데이터베이스: MySQL (AWS RDS) | ORM: JPA/Hibernate | API 문서화: OpenAPI/Swagger | . 주요 라이브러리 . | Spring Data JPA | Spring Web | Spring Validation | Kotlinx Serialization | Kotlinx Coroutines | Ktor Client | AWS SDK (S3, SQS) | RabbitMQ | JUnit 5, Mockk (테스트) | . ",
    "url": "/pages/backend.html#%EA%B8%B0%EC%88%A0-%EC%8A%A4%ED%83%9D",
    
    "relUrl": "/pages/backend.html#기술-스택"
  },"6": {
    "doc": "백엔드 메뉴얼입니다.",
    "title": "프로젝트 구조",
    "content": "백엔드 프로젝트는 다음과 같은 구조로 되어 있습니다: . backend/ ├── src/ │ ├── main/ │ │ ├── kotlin/ │ │ │ └── kr/ac/kookmin/cs/capstone/voicepack_platform/ │ │ │ ├── aiAssistant/ - AI 비서 관련 기능 │ │ │ ├── common/ - 공통 유틸리티 │ │ │ ├── config/ - 설정 클래스 │ │ │ ├── credit/ - 크레딧 시스템 │ │ │ ├── notification/ - 알림 기능 │ │ │ ├── quote/ - 견적 관련 기능 │ │ │ ├── sale/ - 판매 관련 기능 │ │ │ ├── user/ - 사용자 관리 │ │ │ ├── video2voicepack/ - 영상 기반 보이스팩 │ │ │ ├── voicepack/ - 보이스팩 관리 │ │ │ └── VoicepackPlatformApplication.kt │ │ └── resources/ │ │ └── application.yaml - 애플리케이션 설정 │ └── test/ - 테스트 코드 ├── build.gradle.kts - 빌드 설정 └── Dockerfile - 컨테이너 배포 설정 . ",
    "url": "/pages/backend.html#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EA%B5%AC%EC%A1%B0",
    
    "relUrl": "/pages/backend.html#프로젝트-구조"
  },"7": {
    "doc": "백엔드 메뉴얼입니다.",
    "title": "API 엔드포인트",
    "content": "백엔드는 다음과 같은 주요 API 엔드포인트를 제공합니다: . 사용자 관리 . | POST /api/users/signup - 회원가입 | POST /api/users/login - 로그인 | GET /api/users/profile - 사용자 프로필 조회 | . 보이스팩 . | POST /api/voicepack/upload - 보이스팩 업로드 | GET /api/voicepack/{id} - 보이스팩 정보 조회 | GET /api/voicepack/list - 보이스팩 목록 조회 | POST /api/voicepack/synthesis - 텍스트 음성 합성 요청 | . 영상 기반 보이스팩 . | POST /api/video2voicepack - 영상 기반 보이스팩 생성 | . 크레딧 관리 . | POST /api/credits/purchase - 크레딧 구매 | GET /api/credits/balance/{userId} - 잔액 조회 | GET /api/credits/history/{userId} - 거래 내역 조회 | . 판매 관리 . | GET /api/sales/summary - 판매 통계 조회 | GET /api/sales/history - 판매 내역 조회 | . AI 비서 . | POST /api/ai-assistant/setting - AI 비서 설정 | POST /api/ai-assistant/synthesis - AI 비서 음성 합성 | . ",
    "url": "/pages/backend.html#api-%EC%97%94%EB%93%9C%ED%8F%AC%EC%9D%B8%ED%8A%B8",
    
    "relUrl": "/pages/backend.html#api-엔드포인트"
  },"8": {
    "doc": "백엔드 메뉴얼입니다.",
    "title": "개발 환경 설정",
    "content": "필수 요구사항 . | JDK 17 이상 | Gradle 7.0 이상 | Docker (선택사항: 컨테이너 실행용) | . 로컬 개발 환경 설정 . | 저장소 클론 git clone https://github.com/your-repo/voicepack-platform.git cd voicepack-platform/backend . | 설정 파일 생성 cp src/main/resources/application.yaml-example src/main/resources/application.yaml # application.yaml 파일에 필요한 설정 추가 . | 애플리케이션 실행 ./gradlew bootRun . | 테스트 실행 ./gradlew test . | . ",
    "url": "/pages/backend.html#%EA%B0%9C%EB%B0%9C-%ED%99%98%EA%B2%BD-%EC%84%A4%EC%A0%95",
    
    "relUrl": "/pages/backend.html#개발-환경-설정"
  },"9": {
    "doc": "백엔드 메뉴얼입니다.",
    "title": "배포 방법",
    "content": "Docker를 이용한 배포 . | Docker 이미지 빌드 ./gradlew build docker build -t voicepack-platform-backend . | 이미지 실행 docker run -p 8080:8080 voicepack-platform-backend . | . AWS 배포 . | Elastic Beanstalk 설정 | ECR에 이미지 푸시 | ECS/Fargate로 컨테이너 실행 | . ",
    "url": "/pages/backend.html#%EB%B0%B0%ED%8F%AC-%EB%B0%A9%EB%B2%95",
    
    "relUrl": "/pages/backend.html#배포-방법"
  },"10": {
    "doc": "백엔드 메뉴얼입니다.",
    "title": "FAQ",
    "content": "Q: API 문서는 어떻게 확인할 수 있나요? . A: 서버 실행 후 http://localhost:8080/swagger-ui.html에서 Swagger UI로 API 문서를 확인할 수 있습니다. Q: 외부 AI 서비스 연동은 어떻게 설정하나요? . A: application.yaml 파일의 ai.model.service 섹션에 필요한 설정을 추가하세요. Q: 메시지 큐는 어떻게 구성되나요? . A: RabbitMQ와 AWS SQS를 사용하며, application.yaml의 spring.rabbitmq 및 aws.sqs 섹션에 설정을 추가하세요. Q: 테스트 데이터를 생성하는 방법이 있나요? . A: 개발 환경에서 /api/voicepack/debug/create-voicepack 엔드포인트를 사용하여 테스트 데이터를 생성할 수 있습니다. ",
    "url": "/pages/backend.html#faq",
    
    "relUrl": "/pages/backend.html#faq"
  },"11": {
    "doc": "백엔드 메뉴얼입니다.",
    "title": "백엔드 메뉴얼입니다.",
    "content": " ",
    "url": "/pages/backend.html",
    
    "relUrl": "/pages/backend.html"
  },"12": {
    "doc": "프론트엔드 메뉴얼입니다.",
    "title": "프론트엔드 메뉴얼입니다.",
    "content": " ",
    "url": "/pages/frontend.html",
    
    "relUrl": "/pages/frontend.html"
  },"13": {
    "doc": "메뉴얼",
    "title": "전체 메뉴얼 안내 페이지",
    "content": "이곳은 메뉴얼의 상위 페이지입니다. ",
    "url": "/pages/#%EC%A0%84%EC%B2%B4-%EB%A9%94%EB%89%B4%EC%96%BC-%EC%95%88%EB%82%B4-%ED%8E%98%EC%9D%B4%EC%A7%80",
    
    "relUrl": "/pages/#전체-메뉴얼-안내-페이지"
  },"14": {
    "doc": "메뉴얼",
    "title": "메뉴얼",
    "content": " ",
    "url": "/pages/",
    
    "relUrl": "/pages/"
  },"15": {
    "doc": "COVOS",
    "title": "🎙️ COVOS - AI 보이스팩 거래 및 활용 플랫폼",
    "content": ". ",
    "url": "/#%EF%B8%8F-covos---ai-%EB%B3%B4%EC%9D%B4%EC%8A%A4%ED%8C%A9-%EA%B1%B0%EB%9E%98-%EB%B0%8F-%ED%99%9C%EC%9A%A9-%ED%94%8C%EB%9E%AB%ED%8F%BC",
    
    "relUrl": "/#️-covos---ai-보이스팩-거래-및-활용-플랫폼"
  },"16": {
    "doc": "COVOS",
    "title": "🔗 목차",
    "content": ". | 🚀 프로젝트 소개 | 💡 핵심 기능 a. 🗣️ AI 보이스팩 생성 b. 🛍️ 보이스팩 마켓플레이스 c. 🎮 보이스팩 플레이그라운드 | 🎥 소개 영상 | 👥 팀 소개 | 📐 시스템 구조도 | 🧠 기술 스택 | 🛠️ 개발 환경 설정법 | 📂 폴더 구조 | . ",
    "url": "/#-%EB%AA%A9%EC%B0%A8",
    
    "relUrl": "/#-목차"
  },"17": {
    "doc": "COVOS",
    "title": "🚀 프로젝트 소개",
    "content": ". 이제 목소리는 표현을 넘어 자산이 됩니다. | COVOS는 개인이 자신의 목소리를 AI로 학습시켜 보이스팩을 만들고 이를 사고팔 수 있는 플랫폼입니다. | 최신 제로샷 음성합성 기술을 활용해 단 몇 초의 음성만으로도 고품질 AI 목소리를 생성할 수 있습니다. | 자신의 AI 목소리를 보유하고, 콘텐츠에 활용하며, 나아가 새로운 디지털 자산 시장의 일원이 될 수 있도록 하는 것이 우리의 목표입니다 | . ",
    "url": "/#project-intro",
    
    "relUrl": "/#project-intro"
  },"18": {
    "doc": "COVOS",
    "title": "💡 핵심 기능",
    "content": ". 🗣️ AI 보이스팩 생성 . | 사용자가 음성을 업로드하면 AI가 해당 음색·억양을 학습하여 보이스팩을 생성합니다. | . 🛍️ 보이스팩 마켓플레이스 . | 생성한 보이스팩을 크레딧 기반으로 자유롭게 판매할 수 있고, 또한 다른 사람들의 보이스팩을 구매할 수 있습니다. | . 🎮 보이스팩 플레이그라운드 . | 구매한 보이스팩은 플레이그라운드에서 다양한 방식으로 활용할 수 있습니다. | . ",
    "url": "/#core-features",
    
    "relUrl": "/#core-features"
  },"19": {
    "doc": "COVOS",
    "title": "🎥 소개 영상",
    "content": ". ",
    "url": "/#intro-video",
    
    "relUrl": "/#intro-video"
  },"20": {
    "doc": "COVOS",
    "title": "👥 팀 소개",
    "content": ". ",
    "url": "/#team",
    
    "relUrl": "/#team"
  },"21": {
    "doc": "COVOS",
    "title": "📐 시스템 구조도",
    "content": ". ",
    "url": "/#architechture",
    
    "relUrl": "/#architechture"
  },"22": {
    "doc": "COVOS",
    "title": "🧠 기술 스택",
    "content": ". | 영역 | 기술 및 도구 | . | AI/ML | Zero-shot Voice Cloning, PyTorch, HuggingFace | . | Backend | Python, FastAPI, Supabase | . | Frontend | React, TypeScript | . | 인프라 | AWS ECS Fargate, GCP Cloud Run | . | DevOps &amp; 협업도구 | GitHub, Notion, Slack, Trello | . ",
    "url": "/#tech-stack",
    
    "relUrl": "/#tech-stack"
  },"23": {
    "doc": "COVOS",
    "title": "🛠️ 개발 환경 설정법",
    "content": ". 1. 프로젝트 클론 . git clone https://github.com/kookmin-sw/capstone-2025-09.git cd capstone-2025-09 . … . ",
    "url": "/#setup",
    
    "relUrl": "/#setup"
  },"24": {
    "doc": "COVOS",
    "title": "📂 폴더 구조",
    "content": ". capstone-2025-09/ ├── backend/ ├── frontend/ ├── docs/ ├── .gitignore ├── .env . ",
    "url": "/#folder-structure",
    
    "relUrl": "/#folder-structure"
  },"25": {
    "doc": "COVOS",
    "title": "COVOS",
    "content": " ",
    "url": "/",
    
    "relUrl": "/"
  },"26": {
    "doc": "유저 메뉴얼입니다.",
    "title": "유저 메뉴얼입니다.",
    "content": " ",
    "url": "/pages/user_manual.html",
    
    "relUrl": "/pages/user_manual.html"
  }
}
